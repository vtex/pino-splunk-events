name: PR actions
'on':
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@master

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore node cache
        id: cache-node
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install node dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Run yarn lint
        run: yarn lint

  type-checks:
    name: TS (type checks)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@master

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore node cache
        id: cache-node
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install node dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Run yarn ts:validate
        run: yarn ts:validate

  tests:
    name: Run all tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@master

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore node cache
        id: cache-node
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install node dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Run yarn test:ci
        run: yarn test:ci

  build-check:
    name: Build check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version-into-build: [10.x, 12.x, 14.x]
        node-version-into-usage: [10.x, 12.x, 14.x]
    steps:
      - uses: actions/checkout@master

      - name: Use Node.js ${{ matrix.node-version-into-build }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version-into-build }}

      - name: Restore node cache
        id: cache-node
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install node dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Run yarn build
        run: yarn build

      - name: Use Node.js ${{ matrix.node-version-into-usage }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version-into-usage }}

      - name: Run node lib/index.js
        run: node lib/index.js

  size:
    name: Size Limit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
